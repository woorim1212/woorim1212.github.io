{"version":3,"sources":["Components/Head.js","Components/BoardList.js","Components/Create.js","Components/Read.js","Components/Update.js","App.js","reportWebVitals.js","index.js"],"names":["Head","Component","BoardList","data","this","props","data_list","sort","a","b","no","table_list","i","push","href","onClick","e","preventDefault","onSetNumber","bind","title","author","write_date","view_count","length","className","onChangePage","Create","action","onSubmit","onCreateData","target","value","content","name","type","defaultValue","size","required","cols","rows","Read","dataElement","colSpan","onChangeMode","Update","state","inputFormHandler","setState","onUpdateData","onChange","App","max_data_no","count","status","selected_data_no","article","_status","_selected_data_no","_author","_title","_content","_data","Array","from","Date","toISOString","substring","selected_data","window","confirm","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2587da25.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Head extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>MyHomePage</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Head;","import { Component } from \"react\";\r\n\r\nclass BoardList extends Component {\r\n  render() {\r\n    let data = this.props.data_list;\r\n    data.sort(function (a, b) { return b.no - a.no });\r\n\r\n    let table_list = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      table_list.push(\r\n        <tr key={data[i].no}>\r\n          <td>{data[i].no}</td>\r\n          <td>\r\n            <a href=\"dumy.html\" onClick={function (e) {\r\n              e.preventDefault();\r\n              this.props.onSetNumber(data[i].no);\r\n            }.bind(this)}>{data[i].title}</a>\r\n          </td>\r\n          <td>{data[i].author}</td>\r\n          <td>{data[i].write_date}</td>\r\n          <td>{data[i].view_count}</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <article>\r\n        <div className=\"pageTitle\">\r\n          <h2>목록 보기</h2>\r\n        </div>\r\n\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>글번호</th>\r\n              <th className=\"contentTitle\">제목</th>\r\n              <th>작성자</th>\r\n              <th>작성일</th>\r\n              <th>조회수</th>\r\n            </tr>\r\n            {table_list}\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"buttons\">\r\n          <button onClick={function () {\r\n            this.props.onChangePage(\"write\");\r\n          }.bind(this)}>글쓰기</button>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardList;","import { Component } from \"react\";\r\n\r\nclass Create extends Component {\r\n  render() {\r\n    return (\r\n      <article>\r\n        <div className=\"pageTitle\">\r\n          <h2>글 쓰기</h2>\r\n        </div>\r\n\r\n        <form action=\"#\" onSubmit={function (e) {\r\n          e.preventDefault();\r\n          this.props.onCreateData(e.target.author.value, e.target.title.value, e.target.content.value);\r\n        }.bind(this)}>\r\n          <table className=\"formTable\">\r\n            <tbody>\r\n              <tr>\r\n                <th>작성자명</th>\r\n                <td><input name=\"author\" type=\"text\" defaultValue=\"홍길동\" size=\"20\"></input></td>\r\n              </tr>\r\n              <tr>\r\n                <th>제목</th>\r\n                <td><input name=\"title\" type=\"text\" size=\"100\" required></input></td>\r\n              </tr>\r\n              <tr>\r\n                <th>내용</th>\r\n                <td><textarea name=\"content\" cols=\"100\" rows=\"30\" required></textarea></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\">등록</button>\r\n          </div>\r\n        </form>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;","import { Component } from \"react\";\r\n\r\nclass Read extends Component {\r\n  render() {\r\n    let dataElement = this.props.dataElement;\r\n\r\n    return (\r\n      <article>\r\n        <div className=\"pageTitle\">\r\n          <h2>내용 보기</h2>\r\n        </div>\r\n\r\n        <table className=\"formTable\">\r\n          <tbody>\r\n            <tr>\r\n              <th>제목</th>\r\n              <td colSpan=\"5\">\r\n                <h3>{dataElement.title}</h3>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>작성자명</th>\r\n              <td>{dataElement.author}</td>\r\n              <th className=\"inTh\">수정일</th>\r\n              <td>{dataElement.write_date}</td>\r\n              <th className=\"inTh\">조회수</th>\r\n              <td>{dataElement.view_count}</td>\r\n            </tr>\r\n            <tr className=\"content\">\r\n              <th>내용</th>\r\n              <td colSpan=\"5\">{dataElement.content}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div className=\"buttons\">\r\n          <button type=\"button\" onClick={function (e) {\r\n            e.preventDefault();\r\n            this.props.onChangeMode(\"list_view\");\r\n          }.bind(this)}>리스트</button>\r\n          <button type=\"button\" onClick={function (e) {\r\n            e.preventDefault();\r\n            this.props.onChangeMode(\"update\");\r\n          }.bind(this)}>수정</button>\r\n          <button type=\"button\" onClick={function (e) {\r\n            e.preventDefault();\r\n            this.props.onChangeMode(\"delete\");\r\n          }.bind(this)}>삭제</button>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Read;","import { Component } from \"react\";\r\n\r\nclass Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      author: this.props.dataElement.author,\r\n      title: this.props.dataElement.title,\r\n      content: this.props.dataElement.content\r\n    };\r\n    this.inputFormHandler = this.inputFormHandler.bind(this);\r\n  }\r\n\r\n  inputFormHandler(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <article>\r\n        <div className=\"pageTitle\">\r\n          <h2>글 수정</h2>\r\n        </div>\r\n\r\n        <form action=\"#\" onSubmit={function (e) {\r\n          e.preventDefault();\r\n          this.props.onUpdateData(e.target.author.value, e.target.title.value, e.target.content.value);\r\n        }.bind(this)}>\r\n          <table className=\"formTable\">\r\n            <tbody>\r\n              <tr>\r\n                <th>작성자명</th>\r\n                <td>\r\n                  <input name=\"author\" type=\"text\" size=\"20\"\r\n                    value={this.state.author} onChange={this.inputFormHandler}></input>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>제목</th>\r\n                <td>\r\n                  <input name=\"title\" type=\"text\" size=\"100\" required\r\n                    value={this.state.title} onChange={this.inputFormHandler}></input>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>내용</th>\r\n                <td><textarea name=\"content\" cols=\"100\" rows=\"30\" required\r\n                  value={this.state.content} onChange={this.inputFormHandler}></textarea>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\">수정</button>\r\n          </div>\r\n        </form>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;","import './App.css';\nimport { Component } from 'react';\nimport Head from \"./Components/Head\";\nimport BoardList from \"./Components/BoardList\";\nimport Create from \"./Components/Create\";\nimport Read from \"./Components/Read\";\nimport Update from \"./Components/Update\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.max_data_no = 0;\n    this.count = 0;\n    this.state = {\n      status: \"list_view\",\n      selected_data_no: 0,\n      data: [\n        {\n          no: 1, author: \"유재석\", write_date: \"2021-01-01\", view_count: 10,\n          title: \"HTML\", content: \"HTML is Hyper Text Mrakup Language\"\n        },\n        {\n          no: 2, author: \"박명수\", write_date: \"2021-02-02\", view_count: 20,\n          title: \"CSS\", content: \"CSS is Cascading Style Sheet\"\n        },\n        {\n          no: 3, author: \"정형돈\", write_date: \"2021-03-03\", view_count: 30,\n          title: \"JavaScript\", content: \"JavaScript는 페이지 뒤에서 작동 합니다.\"\n        }\n      ]\n    };\n  }\n\n  render() {\n    let article = null;\n\n    if (this.state.status === \"list_view\") {\n      article = <BoardList\n        data_list={this.state.data}\n\n        onChangePage={function (_status) {\n          this.setState({\n            status: _status\n          });\n        }.bind(this)}\n\n        onSetNumber={function (_selected_data_no) {\n          for (let i = 0; i < this.state.data.length; i++) {\n            if (this.state.data[i].no === _selected_data_no) {\n              this.state.data[i].view_count++;\n            }\n          }\n\n          this.setState({\n            status: \"read\",\n            selected_data_no: _selected_data_no\n          });\n        }.bind(this)}\n      />;\n\n    } else if (this.state.status === \"write\") {\n      article = <Create onCreateData={function (_author, _title, _content) {\n        //state.data 배열 복사\n        let _data = Array.from(this.state.data);\n\n        //_data의 배열 요소중 id의 최대값 구하기\n        this.max_data_no = _data[0].no;\n        for (let i = 0; i < _data.length; i++) {\n          if (this.max_data_no < _data[i].no) {\n            this.max_data_no = _data[i].no;\n          }\n        }\n\n        //_data에 요소(객체) 삽입하기\n        _data.push({\n          no: this.max_data_no + 1,\n          author: _author,\n          write_date: new Date().toISOString().substring(0, 10),\n          view_count: 0,\n          title: _title,\n          content: _content\n        });\n\n        this.setState({\n          data: _data,\n          status: \"read\",\n          selected_data_no: this.max_data_no + 1\n        });\n\n      }.bind(this)} />;\n\n    } else if (this.state.status === \"read\") {\n      let selected_data = null;\n      for (let i = 0; i < this.state.data.length; i++) {\n        if (this.state.selected_data_no === this.state.data[i].no) {\n          selected_data = this.state.data[i];\n          break;\n        }\n      }\n\n      article = <Read\n        dataElement={selected_data}\n\n        onChangeMode={function (_status) {\n          if (_status === \"delete\") {\n            if (window.confirm(\"이 게시물을 삭제 할까요?\")) {\n              let _data = Array.from(this.state.data);\n              for (let i = 0; i < _data.length; i++) {\n                if (this.state.selected_data_no === _data[i].no) {\n                  _data.splice(i, 1);\n                  break;\n                }\n              }\n\n              this.setState({\n                data: _data,\n                status: \"list_view\"\n              });\n            }\n          } else {\n            this.setState({\n              status: _status\n            });\n          }\n        }.bind(this)}\n      />;\n\n    } else if (this.state.status === \"update\") {\n      let selected_data = null;\n      let _data = Array.from(this.state.data);\n\n      for (let i = 0; i < _data.length; i++) {\n        if (this.state.selected_data_no === _data[i].no) {\n          selected_data = _data[i];\n          break;\n        }\n      }\n\n      article = <Update\n        dataElement={selected_data}\n\n        onUpdateData={function (_author, _title, _content) {\n          for (let i = 0; i < _data.length; i++) {\n            if (this.state.selected_data_no === _data[i].no) {\n              _data[i].author = _author;\n              _data[i].title = _title;\n              _data[i].content = _content;\n              _data[i].write_date = new Date().toISOString().substring(0, 10);\n              break;\n            }\n          }\n\n          this.setState({\n            data: _data,\n            status: \"read\"\n          });\n        }.bind(this)}\n      />;\n    } //if (this.state.status === \"list_view\")\n\n    return (\n      <div className=\"App\">\n        <Head />\n\n        {article}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}